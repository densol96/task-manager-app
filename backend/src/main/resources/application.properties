spring.application.name=backend
spring.config.import=aws-secretsmanager:/secret/mytestsecret

#db settings
#mySql
spring.datasource.url=jdbc:mysql://localhost:3307/task-manager?createDatabaseIfNotExist=true
spring.datasource.username=Admin
spring.datasource.password=strong_password
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

#aws s3
cloud.aws.credentials.access-key=${cloud-aws-credentials-access-key}
cloud.aws.credentials.secret-key=${cloud-aws-credentials-secret-key}
cloud.aws.bucket=report-evidence-bucket

#logging settings
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.web=DEBUG
logging.level.org.springdoc=DEBUG
logging.level.org.springframework.web.socket=TRACE
logging.level.org.springframework.messaging.simp=TRACE
logging.level.org.springframework.messaging.simp.stomp=TRACE

#JWT settings
security.jwt.secret-key = ${security-jwt-secret-key}
security.jwt.expiration-time = 3600000

#Mail sender settings (as we don't have domain, most likely emails would be in spam folder)
application.name = Taskify
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${spring-mail-username}
spring.mail.password=${spring-mail-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#File accepting settings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=${spring-servlet-multipart-max-file-size}


#admin user (should be stored in AWS Secrets Manager)
#but as I will leave credentials in readme file, in case someone wants to test the application
#I will leave it here too
#admin can only create moderators (change role of already existing users)
admin.account.email = admin@test.com
admin.account.password = 11111111

#Other user roles (for test only - emails not real, so email-notifications will not be sent)
#this role can only confirm email, are actions are no allowed
not-confirmed.account.email = not-confirmed@test.com
not-confirmed.account.password = 11111111

#can create projects, tasks, reports, comments, and assign tasks to other users
user.account.email = user@test.com
user.account.password = 11111111

user.account1.email = user1@test.com
user.account2.email = user2@test.com
user.account3.email = user3@test.com
user.account4.email = user4@test.com
user.account5.email = user5@test.com
user.account6.email = user6@test.com
user.account7.email = user7@test.com

#moderators checks reports and punish violators
moderator.account.email = moderator@test.com
moderator.account.password = 11111111



# Projects related settings
app.projects.max-amount=5
app.projects.max-amount-with-premium=10

# Stripe
stripe.secret.key=sk_test_51QrRIyFRMzfCFfh9yPp0cfucR39B1oWIuAlyV2xL7o2YViC2v0ZArg7ybzroZhqzkWtdAFX9HRH7FKAkF6zdOZdv00cu0OLTnX
stripe.product.id=price_1QraGcFRMzfCFfh9fNf5OqxO
stripe.webhook.secret=whsec_VRLoAq5xh0nkdceMbL06XCp1Lc0joIvR
stripe.api.key=sk_test_51QrRIyFRMzfCFfh9yPp0cfucR39B1oWIuAlyV2xL7o2YViC2v0ZArg7ybzroZhqzkWtdAFX9HRH7FKAkF6zdOZdv00cu0OLTnX

subscription.duration.days=30

# Front-end domain
frontend.domain.url=http://localhost:3000

# OAuth2
spring.security.oauth2.client.registration.google.client-id=188573725163-gnurb7ro09b9q4dsl9o6so0umkb231jc.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

